{"ast":null,"code":"import { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getValueOfAutomationEventAtIndexAtTime = (automationEvents, index, time, defaultValue) => {\n  const automationEvent = automationEvents[index];\n  return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n};","map":{"version":3,"names":["getTargetValueAtTime","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","time","defaultValue","automationEvent","undefined","value","values","length","startTime"],"sources":["D:\\OneDrive\\Desktop\\testProject\\my-app\\node_modules\\automation-events\\src\\functions\\get-value-of-automation-event-at-index-at-time.ts"],"sourcesContent":["import { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nimport { TPersistentAutomationEvent } from '../types';\n\nexport const getValueOfAutomationEventAtIndexAtTime = (\n    automationEvents: TPersistentAutomationEvent[],\n    index: number,\n    time: number,\n    defaultValue: number\n): number => {\n    const automationEvent = automationEvents[index];\n\n    return automationEvent === undefined\n        ? defaultValue\n        : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent)\n        ? automationEvent.value\n        : isSetValueCurveAutomationEvent(automationEvent)\n        ? automationEvent.values[automationEvent.values.length - 1]\n        : getTargetValueAtTime(\n              time,\n              getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue),\n              automationEvent\n          );\n};\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,+BAA+B,QAAQ,8CAA8C;AAC9F,SAASC,yBAAyB,QAAQ,sCAAsC;AAChF,SAASC,8BAA8B,QAAQ,4CAA4C;AAG3F,OAAO,MAAMC,sCAAsC,GAAGA,CAClDC,gBAA8C,EAC9CC,KAAa,EACbC,IAAY,EACZC,YAAoB,KACZ;EACR,MAAMC,eAAe,GAAGJ,gBAAgB,CAACC,KAAK,CAAC;EAE/C,OAAOG,eAAe,KAAKC,SAAS,GAC9BF,YAAY,GACZP,+BAA+B,CAACQ,eAAe,CAAC,IAAIP,yBAAyB,CAACO,eAAe,CAAC,GAC9FA,eAAe,CAACE,KAAK,GACrBR,8BAA8B,CAACM,eAAe,CAAC,GAC/CA,eAAe,CAACG,MAAM,CAACH,eAAe,CAACG,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,GACzDb,oBAAoB,CAChBO,IAAI,EACJH,sCAAsC,CAACC,gBAAgB,EAAEC,KAAK,GAAG,CAAC,EAAEG,eAAe,CAACK,SAAS,EAAEN,YAAY,CAAC,EAC5GC,eAAe,CAClB;AACX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}