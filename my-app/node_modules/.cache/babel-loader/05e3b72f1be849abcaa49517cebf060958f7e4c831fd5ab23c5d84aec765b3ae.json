{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useCallback } from 'react';\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nfunction ChatForm(props) {\n  _s();\n  const {\n    status,\n    startRecording,\n    stopRecording,\n    mediaBlobUrl\n  } = useReactMediaRecorder({\n    audio: true\n  });\n  const fetchAudioAndSubmit = useCallback(async blob => {\n    const file = new File([blob], \"recorded_audio.wav\", {\n      type: \"audio/wav\"\n    });\n\n    // Create a FormData object\n    let formData = new FormData();\n\n    // Add the file to the form data\n    formData.append(\"audio\", file);\n\n    // Send the audio file to the server\n    fetch(\"http://localhost:8000/chat/audio\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      // Assuming server responds with text corresponding to the audio\n      // Inject this text into the chat input and submit the form\n      props.handleInput({\n        target: {\n          value: data.text\n        }\n      });\n      props.handleSubmit();\n    });\n  }, [props]);\n  useEffect(() => {\n    if (status === \"stopped\" && mediaBlobUrl) {\n      fetch(mediaBlobUrl).then(res => res.blob()).then(fetchAudioAndSubmit);\n    }\n  }, [status, mediaBlobUrl, fetchAudioAndSubmit]); // fetchAudioAndSubmit is now a dependency\n\n  // Rest of the code...\n}\n_s(ChatForm, \"f7b5/Z7xKzPt6LqEXcc2aI8RvmY=\", false, function () {\n  return [useReactMediaRecorder];\n});\n_c = ChatForm;\nvar _c;\n$RefreshReg$(_c, \"ChatForm\");","map":{"version":3,"names":["React","useEffect","useCallback","useReactMediaRecorder","ChatForm","props","_s","status","startRecording","stopRecording","mediaBlobUrl","audio","fetchAudioAndSubmit","blob","file","File","type","formData","FormData","append","fetch","method","body","then","response","json","data","handleInput","target","value","text","handleSubmit","res","_c","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/testProject/my-app/src/ChatForm.js"],"sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useReactMediaRecorder } from \"react-media-recorder\";\r\n\r\nfunction ChatForm(props) {\r\n    const {\r\n        status,\r\n        startRecording,\r\n        stopRecording,\r\n        mediaBlobUrl,\r\n    } = useReactMediaRecorder({ audio: true });\r\n\r\n    const fetchAudioAndSubmit = useCallback(async (blob) => {\r\n        const file = new File([blob], \"recorded_audio.wav\", { type: \"audio/wav\" });\r\n\r\n        // Create a FormData object\r\n        let formData = new FormData();\r\n\r\n        // Add the file to the form data\r\n        formData.append(\"audio\", file);\r\n\r\n        // Send the audio file to the server\r\n        fetch(\"http://localhost:8000/chat/audio\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // Assuming server responds with text corresponding to the audio\r\n                // Inject this text into the chat input and submit the form\r\n                props.handleInput({ target: { value: data.text } });\r\n                props.handleSubmit();\r\n            });\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        if (status === \"stopped\" && mediaBlobUrl) {\r\n            fetch(mediaBlobUrl)\r\n                .then(res => res.blob())\r\n                .then(fetchAudioAndSubmit);\r\n        }\r\n    }, [status, mediaBlobUrl, fetchAudioAndSubmit]); // fetchAudioAndSubmit is now a dependency\r\n\r\n    // Rest of the code...\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACrD,SAASC,qBAAqB,QAAQ,sBAAsB;AAE5D,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM;IACFC,MAAM;IACNC,cAAc;IACdC,aAAa;IACbC;EACJ,CAAC,GAAGP,qBAAqB,CAAC;IAAEQ,KAAK,EAAE;EAAK,CAAC,CAAC;EAE1C,MAAMC,mBAAmB,GAAGV,WAAW,CAAC,MAAOW,IAAI,IAAK;IACpD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,IAAI,CAAC,EAAE,oBAAoB,EAAE;MAAEG,IAAI,EAAE;IAAY,CAAC,CAAC;;IAE1E;IACA,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;;IAE7B;IACAD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,IAAI,CAAC;;IAE9B;IACAM,KAAK,CAAC,kCAAkC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACV,CAAC,CAAC,CACGM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV;MACA;MACArB,KAAK,CAACsB,WAAW,CAAC;QAAEC,MAAM,EAAE;UAAEC,KAAK,EAAEH,IAAI,CAACI;QAAK;MAAE,CAAC,CAAC;MACnDzB,KAAK,CAAC0B,YAAY,CAAC,CAAC;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,CAAC1B,KAAK,CAAC,CAAC;EAEXJ,SAAS,CAAC,MAAM;IACZ,IAAIM,MAAM,KAAK,SAAS,IAAIG,YAAY,EAAE;MACtCU,KAAK,CAACV,YAAY,CAAC,CACda,IAAI,CAACS,GAAG,IAAIA,GAAG,CAACnB,IAAI,CAAC,CAAC,CAAC,CACvBU,IAAI,CAACX,mBAAmB,CAAC;IAClC;EACJ,CAAC,EAAE,CAACL,MAAM,EAAEG,YAAY,EAAEE,mBAAmB,CAAC,CAAC,CAAC,CAAC;;EAEjD;AACJ;AAACN,EAAA,CAxCQF,QAAQ;EAAA,QAMTD,qBAAqB;AAAA;AAAA8B,EAAA,GANpB7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}