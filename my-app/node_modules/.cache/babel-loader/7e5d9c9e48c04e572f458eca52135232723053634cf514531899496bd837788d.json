{"ast":null,"code":"import { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getEndTimeAndValueOfPreviousAutomationEvent = (automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) => {\n  return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n};","map":{"version":3,"names":["getValueOfAutomationEventAtIndexAtTime","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getEndTimeAndValueOfPreviousAutomationEvent","automationEvents","index","currentAutomationEvent","nextAutomationEvent","defaultValue","undefined","insertTime","endTime","value","startTime","duration","values","length"],"sources":["D:\\OneDrive\\Desktop\\testProject\\my-app\\node_modules\\automation-events\\src\\functions\\get-end-time-and-value-of-previous-automation-event.ts"],"sourcesContent":["import { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nimport { IExtendedExponentialRampToValueAutomationEvent, IExtendedLinearRampToValueAutomationEvent } from '../interfaces';\nimport { TPersistentAutomationEvent } from '../types';\n\nexport const getEndTimeAndValueOfPreviousAutomationEvent = (\n    automationEvents: TPersistentAutomationEvent[],\n    index: number,\n    currentAutomationEvent: TPersistentAutomationEvent,\n    nextAutomationEvent: IExtendedExponentialRampToValueAutomationEvent | IExtendedLinearRampToValueAutomationEvent,\n    defaultValue: number\n): [number, number] => {\n    return currentAutomationEvent === undefined\n        ? [nextAutomationEvent.insertTime, defaultValue]\n        : isAnyRampToValueAutomationEvent(currentAutomationEvent)\n        ? [currentAutomationEvent.endTime, currentAutomationEvent.value]\n        : isSetValueAutomationEvent(currentAutomationEvent)\n        ? [currentAutomationEvent.startTime, currentAutomationEvent.value]\n        : isSetValueCurveAutomationEvent(currentAutomationEvent)\n        ? [\n              currentAutomationEvent.startTime + currentAutomationEvent.duration,\n              currentAutomationEvent.values[currentAutomationEvent.values.length - 1]\n          ]\n        : [\n              currentAutomationEvent.startTime,\n              getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)\n          ];\n};\n"],"mappings":"AAAA,SAASA,sCAAsC,QAAQ,6DAA6D;AACpH,SAASC,+BAA+B,QAAQ,8CAA8C;AAC9F,SAASC,yBAAyB,QAAQ,sCAAsC;AAChF,SAASC,8BAA8B,QAAQ,4CAA4C;AAI3F,OAAO,MAAMC,2CAA2C,GAAGA,CACvDC,gBAA8C,EAC9CC,KAAa,EACbC,sBAAkD,EAClDC,mBAA+G,EAC/GC,YAAoB,KACF;EAClB,OAAOF,sBAAsB,KAAKG,SAAS,GACrC,CAACF,mBAAmB,CAACG,UAAU,EAAEF,YAAY,CAAC,GAC9CR,+BAA+B,CAACM,sBAAsB,CAAC,GACvD,CAACA,sBAAsB,CAACK,OAAO,EAAEL,sBAAsB,CAACM,KAAK,CAAC,GAC9DX,yBAAyB,CAACK,sBAAsB,CAAC,GACjD,CAACA,sBAAsB,CAACO,SAAS,EAAEP,sBAAsB,CAACM,KAAK,CAAC,GAChEV,8BAA8B,CAACI,sBAAsB,CAAC,GACtD,CACIA,sBAAsB,CAACO,SAAS,GAAGP,sBAAsB,CAACQ,QAAQ,EAClER,sBAAsB,CAACS,MAAM,CAACT,sBAAsB,CAACS,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CAC1E,GACD,CACIV,sBAAsB,CAACO,SAAS,EAChCd,sCAAsC,CAACK,gBAAgB,EAAEC,KAAK,GAAG,CAAC,EAAEC,sBAAsB,CAACO,SAAS,EAAEL,YAAY,CAAC,CACtH;AACX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}